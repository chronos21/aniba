{"version":3,"sources":["components/AppBar.js","components/GridItem.js","components/Loading.js","components/GridList.js","request/request.js","containers/Home.js","components/CommentItem.js","containers/Comments.js","containers/Detail.js","components/ItemLists.js","containers/Series.js","components/GridWrap.js","containers/Search.js","App.js","serviceWorker.js","index.js"],"names":["AppBar","useState","input","setInput","history","useHistory","className","to","action","method","onSubmit","e","preventDefault","push","handleSearch","type","name","placeholder","value","onChange","target","GridItem","props","data","href","Episode","uri","createdAt","moment","fromNow","src","img","Show","thumbnailUrl","alt","title","episodes","Loading","GridList","grid","React","createRef","scrollBooks","direction","current","scrollLeft","onClick","length","ref","map","item","key","id","a","axios","get","console","log","getFeatured","post","query","parentId","comments","text","authorId","localStorage","getItem","setItem","Date","now","body","comment","Home","setData","featured","setFeatured","popular","setPopular","useEffect","document","homeData","dateExp","JSON","parse","getHome","then","res","stringify","featuredData","featuredExp","popularData","popularExp","CommentItem","substring","Comments","isLoading","setLoading","commentInput","setComment","handleNewComment","postComment","fetchComments","getComments","catch","err","interval","setInterval","clearInterval","_id","rows","Detail","episodeId","useParams","epData","getDetail","all","prev","next","video","embed","width","height","controls","ItemList","subtitle","Series","seriesId","getSeries","status","desc","GridWrapItem","replace","GridWrap","Search","searchKey","getSearch","App","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e4de3530.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n// import { getSearch } from '../request/request';\n\nconst AppBar = () => {\n\tconst [ input, setInput ] = useState('');\n\tlet history = useHistory();\n\n\tfunction handleSearch(e) {\n\t\te.preventDefault();\n\t\tsetInput('');\n\t\thistory.push(`/search/${input}`);\n\t}\n\n\treturn (\n\t\t<div className=\"ui container small secondary menu pt-10\">\n\t\t\t<Link className=\"item active\" to=\"/\">\n\t\t\t\tHome\n\t\t\t</Link>\n\t\t\t<div className=\"right menu\">\n\t\t\t\t<div className=\"item\">\n\t\t\t\t\t<form action=\"/search/\" method=\"GET\" className=\"ui icon input\" onSubmit={(e) => handleSearch(e)}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"q\"\n\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\t\tonChange={(e) => setInput(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<i className=\"search link icon\" />\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AppBar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst GridItem = (props) => (\n\t<div className=\"grid-item\">\n\t\t<Link className=\"jumper\" to={props.data.href ? props.data.href : '/' + props.data.Episode.uri} />\n\t\t{props.data.createdAt && (\n\t\t\t<div className=\"time\">\n\t\t\t\t<p>{moment(props.data.createdAt).fromNow()}</p>\n\t\t\t</div>\n\t\t)}\n\n\t\t<div className=\"ui placeholder\">\n\t\t\t<div className=\"image\">\n\t\t\t\t<img src={props.data.img || props.data.Show.thumbnailUrl} alt=\"grid-cover\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"pl-5 mt-5\">\n\t\t\t<p className=\"f-bold ellipsis\">{props.data.title || props.data.Show.title}</p>\n\t\t\t<p className=\"fs-0 ellipsis\">{props.data.episodes || props.data.Episode.title}</p>\n\t\t</div>\n\t</div>\n);\n\nexport default GridItem;\n","import React from 'react';\n\nconst Loading = () => (\n\t<div className=\"text-center pt-20\">\n\t\t<div className=\"lds-ring\">\n\t\t\t<div />\n\t\t\t<div />\n\t\t\t<div />\n\t\t\t<div />\n\t\t</div>\n\t</div>\n);\n\nexport default Loading;\n","import React from 'react';\nimport GridItem from './GridItem';\nimport Loading from './Loading';\n\nconst GridList = (props) => {\n\tlet grid = React.createRef();\n\n\tfunction scrollBooks(direction) {\n\t\tif (direction === 'right') {\n\t\t\tgrid.current.scrollLeft += 400;\n\t\t} else {\n\t\t\tgrid.current.scrollLeft -= 400;\n\t\t}\n\t}\n\treturn (\n\t\t<div className=\"grid-list\">\n\t\t\t<div className=\"float-right control\">\n\t\t\t\t<span onClick={() => scrollBooks('left')}>‹</span>\n\t\t\t\t<span onClick={() => scrollBooks('right')}>›</span>\n\t\t\t</div>\n\t\t\t<h3 className=\"title\">{props.title}</h3>\n\n\t\t\t{!props.data || props.data.length === 0 ? (\n\t\t\t\t<div className=\"pt-20\">\n\t\t\t\t\t<Loading />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"grid-container\" ref={grid}>\n\t\t\t\t\t{props.data.map((item) => <GridItem key={item.id || item.title} data={item} />)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default GridList;\n","import axios from 'axios';\n\nexport const url = '';\n\nexport async function getHome() {\n\ttry {\n\t\tlet { data } = await axios.get(`${url}/api/home?json=true`);\n\t\treturn data.data;\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nexport async function getFeatured(key) {\n\ttry {\n\t\tlet { data } = await axios.post(`${url}/api/browse`, { key });\n\t\treturn data.data;\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nexport async function getDetail(id) {\n\ttry {\n\t\tlet { data } = await axios.get(`${url}/api/episodes/${id}?json=true`);\n\t\treturn data.data;\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nexport async function getSearch(query) {\n\ttry {\n\t\tlet { data } = await axios.get(`${url}/api/search?json=true&q=${query}`);\n\t\treturn data.data;\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nexport async function getSeries(id) {\n\ttry {\n\t\tlet { data } = await axios.get(`${url}/api/series/${id}?json=true`);\n\t\treturn data.data;\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nexport async function getComments(parentId) {\n\ttry {\n\t\tlet { data } = await axios.get(`${url}/api/comments/${parentId}`);\n\t\treturn data.comments;\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nexport async function postComment(parentId, text) {\n\tlet authorId = localStorage.getItem('authorId');\n\n\tif (!authorId) authorId = localStorage.setItem('authorId', Date.now());\n\tlet body = {\n\t\tauthorId,\n\t\tparentId,\n\t\ttext\n\t};\n\ttry {\n\t\tlet { data } = await axios.post(`${url}/api/comments/${parentId}`, body);\n\t\treturn data.comment;\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n","import React, { useEffect, useState } from 'react';\nimport GridList from '../components/GridList';\nimport { getHome, getFeatured } from '../request/request.js';\n\nconst Home = () => {\n\tconst [ data, setData ] = useState([]);\n\tconst [ featured, setFeatured ] = useState([]);\n\tconst [ popular, setPopular ] = useState([]);\n\n\tuseEffect(() => {\n\t\tdocument.title = 'aniba - Watch free anime without ads!';\n\t\tlet homeData = localStorage.getItem('home');\n\t\tlet dateExp = localStorage.getItem('homeExp');\n\t\tif ((Date.now() - dateExp) / 1000 <= 360 && homeData) {\n\t\t\thomeData = JSON.parse(homeData);\n\t\t\tsetData(homeData);\n\t\t} else {\n\t\t\tgetHome().then((res) => {\n\t\t\t\tsetData(res);\n\t\t\t\thomeData = res;\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tlocalStorage.setItem('home', JSON.stringify(homeData));\n\t\t\tlocalStorage.setItem('homeExp', Date.now());\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlet featuredData = localStorage.getItem('featured');\n\t\tlet featuredExp = localStorage.getItem('featuredExp');\n\t\tif ((Date.now() - featuredExp) / 1000 <= 360 && featuredData) {\n\t\t\tfeaturedData = JSON.parse(featuredData);\n\t\t\tsetFeatured(featuredData);\n\t\t} else {\n\t\t\tgetFeatured('sortBy=createdAt&sortDirection=DESC').then((res) => {\n\t\t\t\tsetFeatured(res);\n\t\t\t\tfeaturedData = res;\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tlocalStorage.setItem('featured', JSON.stringify(featuredData));\n\t\t\tlocalStorage.setItem('featuredExp', Date.now());\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlet popularData = localStorage.getItem('popular');\n\t\tlet popularExp = localStorage.getItem('popularExp');\n\t\tif ((Date.now() - popularExp) / 1000 <= 360 && popularData) {\n\t\t\tpopularData = JSON.parse(popularData);\n\t\t\tsetPopular(popularData);\n\t\t} else {\n\t\t\tgetFeatured('ongoing=true').then((res) => {\n\t\t\t\tsetPopular(res);\n\t\t\t\tpopularData = res;\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tlocalStorage.setItem('popular', JSON.stringify(popularData));\n\t\t\tlocalStorage.setItem('popularExp', Date.now());\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div className=\"mb-40\">\n\t\t\t<GridList data={data} title=\"New Releases\" />\n\t\t\t<GridList data={featured} title=\"Ongoing Animes\" />\n\t\t\t<GridList data={popular} title=\"Popular Animes\" />\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport moment from 'moment';\n\nconst CommentItem = (props) => (\n\t<div className=\"comment\">\n\t\t<span className=\"avatar\">\n\t\t\t<img src=\"/avatar.jpg\" alt=\"avatar\" />\n\t\t</span>\n\t\t<div className=\"content\">\n\t\t\t<span className=\"author\">Anonymous</span> [{props.data.authorId.substring(8)}]\n\t\t\t<div className=\"metadata\">\n\t\t\t\t<span className=\"date\">{moment(props.data.createdAt).fromNow()}</span>\n\t\t\t</div>\n\t\t\t<div className=\"text\">{props.data.text}</div>\n\t\t</div>\n\t</div>\n);\n\nexport default CommentItem;\n","import React, { useState, useEffect } from 'react';\nimport { getComments, postComment } from '../request/request';\nimport CommentItem from '../components/CommentItem';\nimport Loading from '../components/Loading';\n\nconst Comments = (props) => {\n\tconst [ data, setData ] = useState([]);\n\tconst [ isLoading, setLoading ] = useState(false);\n\tconst [ commentInput, setComment ] = useState('');\n\n\tuseEffect(\n\t\t() => {\n\t\t\tfunction fetchComments() {\n\t\t\t\tgetComments(props.parentId)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tsetData(res);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tsetLoading(true);\n\t\t\tfetchComments();\n\t\t\tconst interval = setInterval(() => fetchComments(), 45000);\n\t\t\treturn () => clearInterval(interval);\n\t\t},\n\t\t[ props.parentId ]\n\t);\n\n\tfunction handleNewComment(e) {\n\t\te.preventDefault();\n\t\tpostComment(props.parentId, commentInput).then((res) => {\n\t\t\t// console.log(res);\n\t\t\tsetData([ ...data, res ]);\n\t\t\tsetComment('');\n\t\t});\n\t}\n\n\tif (isLoading) {\n\t\treturn <Loading />;\n\t}\n\n\treturn (\n\t\t<div className=\"mb-40\">\n\t\t\t<h3 className=\"ui dividing header\">Comments</h3>\n\n\t\t\t{!data || data.length === 0 ? (\n\t\t\t\t<p className=\"pb-20\">There's no comment</p>\n\t\t\t) : (\n\t\t\t\t<div className=\"ui comments\">{data.map((item) => <CommentItem data={item} key={item._id} />)}</div>\n\t\t\t)}\n\n\t\t\t<form className=\"ui reply form\" id=\"comment-form\" onSubmit={(e) => handleNewComment(e)}>\n\t\t\t\t<div className=\"field\">\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid=\"comment-box\"\n\t\t\t\t\t\trows=\"5\"\n\t\t\t\t\t\tonChange={(e) => setComment(e.target.value)}\n\t\t\t\t\t\tvalue={commentInput}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"ui blue labeled submit icon button\">\n\t\t\t\t\t<i className=\"icon edit\" /> Add Reply\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default Comments;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getDetail, url } from '../request/request';\nimport Loading from '../components/Loading';\nimport Comments from './Comments';\n\nconst Detail = (props) => {\n\tconst [ data, setData ] = useState({});\n\tconst [ isLoading, setLoading ] = useState(true);\n\tconst { episodeId } = useParams();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetLoading(true);\n\t\t\tlet epData = localStorage.getItem(episodeId);\n\t\t\tif (epData) {\n\t\t\t\tepData = JSON.parse(epData);\n\t\t\t\tsetData(epData);\n\t\t\t\tsetLoading(false);\n\t\t\t} else {\n\t\t\t\tgetDetail(episodeId)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tsetData(res);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\tepData = res;\n\t\t\t\t\t\tdocument.title = `Watch ${res.title} for free`;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => console.log(err));\n\t\t\t}\n\t\t\treturn () => {\n\t\t\t\tlocalStorage.setItem(episodeId, JSON.stringify(epData));\n\t\t\t};\n\t\t},\n\t\t[ episodeId ]\n\t);\n\n\tif (isLoading) {\n\t\treturn <Loading />;\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"ui container\">\n\t\t\t\t<div>\n\t\t\t\t\t<Link to={data.all}>All Episodes</Link>\n\t\t\t\t\t<span> | </span>\n\t\t\t\t\t<Link to={data.prev}>Previous</Link>\n\t\t\t\t\t<span> | </span>\n\t\t\t\t\t<Link to={data.next}>Next</Link>\n\t\t\t\t</div>\n\t\t\t\t<h3 className=\"ui header mb-4\">{data.title}</h3>\n\n\t\t\t\t<div className=\"video-container\">\n\t\t\t\t\t{data.video && (\n\t\t\t\t\t\t<video\n\t\t\t\t\t\t\tsrc={`${url}/video?url=${data.video}&embed=${data.embed}`}\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\t\tcontrols\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{episodeId && !isLoading && <Comments parentId={episodeId} />}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Detail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ItemList = (props) => (\n\t<div className=\"ui relaxed selection list\">\n\t\t{props.data.map((item) => (\n\t\t\t<div className=\"item\" key={item.subtitle}>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<Link className=\"header\" to={item.href}>\n\t\t\t\t\t\t{item.title}\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className=\"description\">{item.subtitle}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t))}\n\t</div>\n);\n\nexport default ItemList;\n","import React, { useState, useEffect } from 'react';\nimport ItemList from '../components/ItemLists';\nimport { getSeries } from '../request/request';\nimport { useParams } from 'react-router-dom';\nimport Loading from '../components/Loading';\n\nconst Series = () => {\n\tconst [ data, setData ] = useState({});\n\tconst [ isLoading, setLoading ] = useState(true);\n\tconst { seriesId } = useParams();\n\tuseEffect(\n\t\t() => {\n\t\t\tsetLoading(true);\n\t\t\tgetSeries(seriesId)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tsetData(res);\n\t\t\t\t\tdocument.title = `Watch ${res.title} for free without ads`;\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t},\n\t\t[ seriesId ]\n\t);\n\n\tif (isLoading) {\n\t\treturn <Loading />;\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<img className=\"img-back\" src={data.img} alt=\"cover\" />\n\t\t\t<div className=\"ui container mb-40\">\n\t\t\t\t<div className=\"ui grid\">\n\t\t\t\t\t<div className=\"large screen only four wide column\">\n\t\t\t\t\t\t<img className=\"series-img\" src={data.img} alt=\"cover\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"large screen only twelve wide column\">\n\t\t\t\t\t\t<h1>{data.title}</h1>\n\t\t\t\t\t\t<p>{data.status}</p>\n\t\t\t\t\t\t<p>{data.desc}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mobile only sixteen wide column\">\n\t\t\t\t\t\t<h1>{data.title}</h1>\n\t\t\t\t\t\t<p>{data.status}</p>\n\t\t\t\t\t\t<p>{data.desc}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{data && data.episodes && <ItemList data={data.episodes} />}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Series;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst GridWrap = (props) => {\n\treturn (\n\t\t<div className=\"grid-wrap\">\n\t\t\t{props.data && props.data.map((item) => <GridWrapItem data={item} key={item.href} />)}\n\t\t</div>\n\t);\n};\n\nconst GridWrapItem = (props) => (\n\t<div className=\"wrap-item\">\n\t\t<div className=\"ui placeholder h-100\">\n\t\t\t<div className=\"image h-100\">\n\t\t\t\t<img src={props.data.img} alt=\"cover\" height=\"300\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<Link className=\"wrap-info\" to={props.data.href}>\n\t\t\t<div>\n\t\t\t\t<p className=\"f-bold ellipsis\">{props.data.title}</p>\n\t\t\t\t<p className=\"ellipsis\">{props.data.episodes}</p>\n\t\t\t\t<p className=\"ellipsis\">{props.data.status.replace('Status : ', '')}</p>\n\t\t\t</div>\n\t\t</Link>\n\t</div>\n);\n\nexport default GridWrap;\n","import React, { useState, useEffect } from 'react';\nimport { getSearch } from '../request/request';\nimport { useParams } from 'react-router-dom';\nimport GridWrap from '../components/GridWrap';\nimport Loading from '../components/Loading';\n\nconst Search = () => {\n\tconst [ data, setData ] = useState([]);\n\tconst [ isLoading, setLoading ] = useState(true);\n\tconst { searchKey } = useParams();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetLoading(true);\n\t\t\tgetSearch(searchKey)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tsetData(res);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\tdocument.title = 'results for: ' + searchKey;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t});\n\t\t},\n\t\t[ searchKey ]\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"ui container pb-10\">\n\t\t\t\t<h3>results for: {searchKey}</h3>\n\t\t\t</div>\n\n\t\t\t{!isLoading && !data && <p className=\"text-center pt-10\">There's no result</p>}\n\t\t\t{isLoading ? <Loading /> : <GridWrap data={data} />}\n\t\t</div>\n\t);\n};\n\nexport default Search;\n","import React from 'react';\nimport './App.css';\nimport AppBar from './components/AppBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './containers/Home';\nimport Detail from './containers/Detail';\nimport Series from './containers/Series';\nimport Search from './containers/Search';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<AppBar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/series/:seriesId\">\n\t\t\t\t\t\t<Series />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/search/:searchKey\">\n\t\t\t\t\t\t<Search />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/:episodeId\">\n\t\t\t\t\t\t<Detail />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}